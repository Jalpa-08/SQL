SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM";

SELECT COUNT (*) FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM";

SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCDS_SF100TCL"."CATALOG_SALES";

SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCDS_SF100TCL"."CATALOG_SALES" LIMIT 100000;

CREATE DATABASE JD_demodatabase

use JD_demodatabase

CREATE OR REPLACE TABLE OWNER 
(
   OwnerID INTEGER NOT NULL PRIMARY KEY ,
   Name VARCHAR2(20),
   Surname STRING,
   StreetAddress VARCHAR2(50),
   City STRING,
   StatE CHAR(4),
   StateFull STRING,
   ZipCode INTEGER
);

CREATE OR REPLACE TABLE PETS
(
    PetID VARCHAR(10) NOT NULL PRIMARY KEY,
    Name VARCHAR(20),
    Kind STRING,
    Gender CHAR(7),
    Age INTEGER,
    OwnerID INTEGER NOT NULL REFERENCES OWNER 
);
SELECT * FROM OWNER
SELECT * FROM PETS
SELECT COUNT(DISTINCT OwnerID) from OWNER;
SELECT COUNT(DISTINCT PetID) from PETS;

-- NEED THE NAME OF OWNER & THEIR DOGS NAME ALONG WITH THEIR AGE  ---- INNER JOIN
SELECT O.Name AS OWNER_NAME,p.NAME AS PET_NAME,p.age AS PET_AGE
FROM OWNER o
INNER JOIN PETS p ON o.OwnerID = p.OwnerID;

--NEED THE NAME OF ALL THE OWNERS IRRESPECTIVE WETHER OR NOT THEY ARE HAVING PETS 
SELECT O.Name AS OWNER_NAME,p.NAME AS PET_NAME,p.age AS PET_AGE
FROM OWNER o
LEFT OUTER JOIN PETS p ON o.OwnerID = p.OwnerID;

--- COUNT OF PETS EACH OWNER HAS
SELECT O.Name AS OWNER_NAME,COUNT(DISTINCT p.PETID)
FROM OWNER o
INNER JOIN PETS p ON o.OwnerID = p.OwnerID
GROUP BY 1
ORDER BY 2 DESC;

---RIGHT JOIN
SELECT O.Name AS OWNER_NAME,p.NAME AS PET_NAME,p.age AS PET_AGE
FROM OWNER o
RIGHT JOIN PETS p ON o.OwnerID = p.OwnerID;

--FULL OUTER JOIN
SELECT O.*,P.*
FROM OWNER O
FULL OUTER JOIN PETS p ON o.OwnerID = p.OwnerID;

-- INFO OF ALL THE PETS HOLD BY THEIR OWNER
SELECT DISTINCT KIND FROM PETS;
SELECT KIND,COUNT(*) FROM PETS
GROUP BY 1;


--- CROSS JOIN 
SELECT O.*,P.*
FROM OWNER O
CROSS JOIN PETS p ;


CREATE OR REPLACE TABLE EMPLOYEE
(
   EMPID INTEGER NOT NULL PRIMARY KEY,
   EMP_NAME VARCHAR2(20),
   JOB_ROLE STRING,
   SALARY NUMBER(10,2)
);

INSERT INTO EMPLOYEE
VALUES('101','JALPA','DATA SCIENTIST',50000);

INSERT INTO EMPLOYEE
VALUES(102,'BHARGAV', 'Data Enginner',60000);

INSERT INTO EMPLOYEE
VALUES(103,'RUHANI', 'Data Scientist',48000);

INSERT INTO EMPLOYEE
VALUES(104,'PIYA', 'Analyst',98000);

INSERT INTO EMPLOYEE
VALUES(105,'PULKIT', 'Data Scientist',72000);

INSERT INTO EMPLOYEE
VALUES(106,'RIYA','Analyst',100000);

INSERT INTO EMPLOYEE
VALUES(107,'RISHABH','Data Engineer',67000);

INSERT INTO EMPLOYEE
VALUES(108,'SHUBHAM','Manager',148000);

INSERT INTO EMPLOYEE
VALUES(109,'RAVI','Manager',213000);

INSERT INTO EMPLOYEE
VALUES(110,'DHRUV','Data Scientist',89000);

DELETE FROM EMPLOYEE WHERE EMPID = 110;

SELECT * FROM EMPLOYEE;


INSERT INTO EMPLOYEE
VALUES('101','ANAND JHA','Analyst',50000);

INSERT INTO EMPLOYEE
VALUES(102,'ALex', 'Data Enginner',60000);

INSERT INTO EMPLOYEE
VALUES(103,'Ravi', 'Data Scientist',48000);

INSERT INTO EMPLOYEE
VALUES(104,'Peter', 'Analyst',98000);

INSERT INTO EMPLOYEE
VALUES(105,'Pulkit', 'Data Scientist',72000);

INSERT INTO EMPLOYEE
VALUES(106,'Robert','Analyst',100000);

INSERT INTO EMPLOYEE
VALUES(107,'Rishabh','Data Engineer',67000);

INSERT INTO EMPLOYEE
VALUES(108,'Subhash','Manager',148000);

INSERT INTO EMPLOYEE
VALUES(109,'Michaeal','Manager',213000);

INSERT INTO EMPLOYEE
VALUES(110,'Dhruv','Data Scientist',89000);

DELETE FROM EMPLOYEE WHERE EMPID = 110;

SELECT * FROM EMPLOYEE;


--hOW TO DOWNLOAD DATA FROM SNAKEFLOW
SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM";

SELECT * FROM
(SELECT ROW *,ROW_NUMBER() OVER(ORDER BY L_COMMITDATE) AS ROW_NUM
FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM")
WHERE ROW_NUM <= 3000;